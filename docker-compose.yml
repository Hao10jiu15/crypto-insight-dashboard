  # version: '3.8'

  services:
    # 数据库服务: 使用TimescaleDB (PostgreSQL的超集)
    postgres:
      image: timescale/timescaledb:latest-pg15
      container_name: crypto_db
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      env_file:
        - ./.env
      ports:
        - "5432:5432" # 仅为开发方便暴露，生产环境可移除

    # 缓存与消息代理服务
    redis:
      image: redis:7-alpine
      container_name: crypto_redis

    # Django 后端应用服务
    backend:
      container_name: crypto_backend
      build: ./backend
      # 注意: 'config.wsgi:application' 中的 'config' 是Django项目的名称，后续需要统一
      command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
      volumes:
        - ./backend:/app # 将本地代码挂载到容器中，方便开发
      ports:
        - "8000:8000" # 新增：将容器的8000端口映射到主机的8000端口
      expose:
        - "8000"
      env_file:
        - ./.env
      depends_on:
        - postgres
        - redis

    # Celery 后台任务执行者
    celery_worker:
      container_name: crypto_celery_worker
      build: ./backend
      # 注意: '-A config' 中的 'config' 是Django项目的名称
      command: celery -A config worker -l info
      volumes:
        - ./backend:/app
      env_file:
        - ./.env
      depends_on:
        - redis
        - postgres

    # Celery 任务调度器
    celery_beat:
      container_name: crypto_celery_beat
      build: ./backend
      command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
      volumes:
        - ./backend:/app
      env_file:
        - ./.env
      depends_on:
        - redis
        - postgres

  volumes:
    postgres_data: